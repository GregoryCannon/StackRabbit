name: Build and Release wasmSR

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Emscripten SDK
      - name: Set up Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh

      # Step 3: Build the project
      - name: Compile C++ with Emscripten
        run: |
          source ./emsdk/emsdk_env.sh
          mkdir -p ./build/Release/wasm
          emcc ./src/cpp_modules/src/wasm.cpp -O3 --bind -lembind -g0 -o ./build/Release/wasm/wasmRabbit.js

      # Step 4: Create a ZIP archive of the compiled files
      - name: Create ZIP archive
        run: |
          mkdir -p dist
          zip -r dist/wasmRabbit.zip ./build/Release/wasm/*

      # Step 5: Create a GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # uses the tag name
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false

      # Step 6: Upload the ZIP file to the release
      - name: Upload ZIP to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/wasmRabbit.zip
          asset_name: wasmRabbit.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}